#!/bin/bash

# Downloads latest protoc libraries, unpacks and puts them in the right place

set -e

[[ $(command -v wget) ]] || { echo "'wget' not found!" ; dep_check="false" ;}
[[ $(command -v unzip) ]] || { echo "'unzip' not found!" ; dep_check="false" ;}
[[ $(command -v jq) ]] || { echo "'jq' not found!" ; dep_check="false" ;}

[[ ${dep_check} = "false" ]] && { echo "Some dependencie(s) isn't installed yet. Please install that dependencie(s)" ; exit 1 ;}

gh_protoc_release_url="https://api.github.com/repos/protocolbuffers/protobuf/releases/latest"
setdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd)" # this line powered by stackoverflow

# Check dir else create save dir
if [[ $(basename ${setdir}) = "scripts" ]] ; then
    if [[ $(basename $(dirname "${setdir}")) = "starport-playground" ]] ; then
        [[ -d $(dirname "${setdir}/pkg/protoc/data") ]] || mkdir -p "$(dirname "${setdir}")/starport/pkg/protoc/data"
    else
        echo "Attention: you are running the script out of the startport project please run it this script in: https://github.com/tendermint/starport"
        exit 1
    fi
else
    echo "$setdir"
    echo "Attention: you are running the script out of the startport project please run it this script in: https://github.com/tendermint/starport"
    exit 1
fi

# Check and Create Temp Directory
[[ -d "/tmp/${0}" ]] && rm -rf "/tmp/${0}"
mkdir -p "/tmp/${0}" && cd "/tmp/${0}"

# Fetch releases, go through assets (release artifacts) and find the relevant ones
wget -O - ${gh_protoc_release_url} \
  | jq --raw-output '.assets[] | select(.name | test("protoc-.*-(linux-x86_64|linux-aarch_64|osx-x86_64)\\.zip")) | .browser_download_url' > filesToDownload.txt

mkdir downloads
wget -P downloads -i filesToDownload.txt

cd downloads
for f in *.zip; do
  name=${f%.zip}
  unzip "$f" -d "$name"


  case "$name" in
  *"linux-x86_64") fname="protoc-linux-amd64"
    ;;
  *"linux-aarch_64") fname="protoc-linux-arm64"
    ;;
  *"osx-x86_64") fname="protoc-darwin-amd64"
    ;;
  *) echo "No known type was found in $name"; exit 1;
    ;;
  esac

  mv "${f%.zip}/bin/protoc" "$(dirname ${setdir})/starport/pkg/protoc/data/${fname}"
done

echo "/tmp/${0}"
ls -la
rm -rf "/tmp/${0}"